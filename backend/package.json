{
  "name": "elitepartyz-backend",
  "version": "1.0.0",
  "description": "",
  "main": "main.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "dev": "cross-env NODE_ENV=development nodemon src/server_local.js",
    "start": "NODE_ENV=production src/server_local.js",
    "dbsetup": "sequelize db:migrate --config src/config/config.json --migrations-path src/migrations --models-path src/models --seeders-path src/seeders",
    "dbclear": "sequelize db:migrate:undo:all --config src/config/config.json --migrations-path src/migrations --models-path src/models --seeders-path src/seeders",
    "local": "node scripts/local",
    "invoke-lambda": "cross-var aws lambda invoke --function-name $npm_package_config_functionName --region $npm_package_config_region --payload file://api-gateway-event.json lambda-invoke-response.json && cat lambda-invoke-response.json",
    "create-bucket": "cross-var aws s3 mb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
    "delete-bucket": "cross-var aws s3 rb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
    "package": "cross-var aws cloudformation package --template sam-template.yml --s3-bucket $npm_package_config_s3BucketName --output-template sam-template.packaged.yml --region $npm_package_config_region",
    "deploy": "cross-var aws cloudformation deploy --template-file sam-template.packaged.yml --stack-name $npm_package_config_cloudFormationStackName --capabilities CAPABILITY_NAMED_IAM --region $npm_package_config_region --parameter-overrides DomainName=$npm_package_config_domain Environment=$ENV",
    "package-deploy": "npm run build-$ENV && npm run package && npm run deploy",
    "delete-stack": "cross-var aws cloudformation delete-stack --stack-name $npm_package_config_cloudFormationStackName --region $npm_package_config_region",
    "setup": "npm install && (cross-var aws s3api get-bucket-location --bucket $npm_package_config_s3BucketName --region $npm_package_config_region || npm run create-bucket) && npm run package-deploy",
    "build-nonprod": "webpack-cli --config webpack.config.js",
    "build-prod": "webpack-cli --config webpack.prod.config.js"
  },
  "keywords": [],
  "author": "Elite partyz",
  "license": "ISC",
  "dependencies": {
    "@vendia/serverless-express": "^4.5.4",
    "body-parser": "^1.17.1",
    "colors": "^1.4.0",
    "compression": "^1.6.2",
    "console-emoji-log": "^1.0.1",
    "cookie-parser": "^1.4.6",
    "cors": "^2.8.5",
    "cross-env": "^7.0.3",
    "dotenv": "^16.0.0",
    "dotenv-webpack": "^7.1.0",
    "ejs": "^3.1.6",
    "express": "^4.17.3",
    "http-errors": "^2.0.0",
    "jsonwebtoken": "^8.5.1",
    "multer": "^1.4.5-lts.1",
    "mysql2": "^2.3.3",
    "node": "^14.17.1",
    "pg-hstore": "^2.3.4",
    "sequelize": "^6.17.0",
    "tedious": "^14.3.0"
  },
  "devDependencies": {
    "copy-webpack-plugin": "^7.0.0",
    "cross-var": "^1.1.0",
    "nodemon": "^2.0.16",
    "source-map-support": "^0.5.19",
    "webpack": "^5.21.2",
    "webpack-cli": "^4.5.0",
    "webpack-dev-server": "^4.7.4"
  },
  "config": {
    "s3BucketName": "epz-sam",
    "region": "ap-southeast-2",
    "cloudFormationStackName": "WebAPIStack-$ENV",
    "functionName": ""
  }
}